name: Manual Build Dependencies

on:
  workflow_dispatch:

jobs:
  build-upload-dependencies:
    strategy:
      matrix:
        os: [linux-arm64, ubuntu-24.04, macos-15]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    env:
      BOOST_VERSION : 1.85.0
      OPENSSL_VERSION : 3.4.0

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Set Environment Variables
      run: |
        OS_ARCH="$(uname -s | tr 'A-Z' 'a-z')_$(uname -m)"
        PACKAGE_NAME="dependancies_$OS_ARCH"
        echo "Building $PACKAGE_NAME on $OS_ARCH"
        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
        echo "BOOST_URL=https://github.com/boostorg/boost/releases/download/boost-$BOOST_VERSION/boost-$BOOST_VERSION-cmake.tar.gz" >> $GITHUB_ENV
        echo "OPENSSL_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz" >> $GITHUB_ENV
        echo "INSTALL_DIR=${{ github.workspace }}/$PACKAGE_NAME" >> $GITHUB_ENV
        echo "BOOST_ROOT=${{ github.workspace }}/$PACKAGE_NAME/boost_$BOOST_VERSION" >> $GITHUB_ENV
        echo "OPENSSL_ROOT_DIR=${{ github.workspace }}/$PACKAGE_NAME/openssl_$OPENSSL_VERSION" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Prepare Environment
      run: |
        if [[ ${{ matrix.os }} == *'ubuntu'* ]]; then
          sudo apt-get update
          sudo apt-get install -y build-essential g++ wget
        fi
        mkdir -p $BOOST_ROOT
        mkdir -p $OPENSSL_ROOT_DIR

    - name: Build Boost using cmake
      run: |
        wget -q $BOOST_URL -O "boost-$BOOST_VERSION-cmake.tar.gz"
        tar -xzf "boost-$BOOST_VERSION-cmake.tar.gz"
        mkdir -p "boost-$BOOST_VERSION/build"
        cmake -B "./boost-$BOOST_VERSION/build" -S "./boost-$BOOST_VERSION" -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX="$BOOST_ROOT"
        cmake --build "./boost-$BOOST_VERSION/build" -j$(nproc) --target install

    - name: Build OpenSSL
      run: |
        wget -q "$OPENSSL_URL" -O "openssl-$OPENSSL_VERSION.tar.gz"
        tar -xzf "openssl-$OPENSSL_VERSION.tar.gz"
        cd "openssl-$OPENSSL_VERSION"
        ./config no-shared no-tests no-docs no-dso no-engine --prefix="$OPENSSL_ROOT_DIR" --openssldir="$OPENSSL_ROOT_DIR"
        make -j$(nproc)
        make install_sw

    - name: Create archive
      run: |
        cd ${{ github.workspace }}
        tar -czf "$PACKAGE_NAME.tar.gz" "$PACKAGE_NAME"
      shell: bash

    - name: Upload artifact using github cli
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="depcy"
        ASSET_PATH="./${{ env.PACKAGE_NAME }}.tar.gz"
        gh release upload $TAG_NAME $ASSET_PATH --repo ${{ github.repository }} --clobber