syntax = "proto3";

package http_msg;

//// MetaMsg contain the message type name and the serialization of the primary message.
message MetaMsg
{
    string msg_type        = 1;
    bytes  serialized_data = 2;// can be encrypted
}

/// Operations to apply on a stack
message StackOp
{
  enum StackOptype
  {
    NOTHING = 0; // do nothing
    POP     = 1; // pop the stack , will require the poped element to double check
    PUSH    = 2; // push the stack, will require the element to push
  }

  StackOptype op_type = 1 ; // apply type
  bytes          data = 2 ; // apply data
}

message ScriptEvalRequest {
  string                     hash = 1 ; // Hashed the entired script tokens, will be used to double check data integrity
  repeated string      init_stack = 2 ; // Initial values of stack data. List of hex string
  repeated string tokens = 3 ; // Script tokens are op codes or binary hex string (as data)
}

message ScriptEvalReply {
  string hash     = 1 ; // Hashed the entired script tokens, will be used to double check data integrity
  repeated StackOp ops   = 2 ; // Script tokens are op codes or binary hex string (as data)
}